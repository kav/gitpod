// Copyright (c) 2020 TypeFox GmbH. All rights reserved.
// Licensed under the GNU Affero General Public License (AGPL).
// See License-AGPL.txt in the project root for license information.

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: workspace.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WriteIDMappingResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	ErrorCode            uint32   `protobuf:"varint,2,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WriteIDMappingResponse) Reset()         { *m = WriteIDMappingResponse{} }
func (m *WriteIDMappingResponse) String() string { return proto.CompactTextString(m) }
func (*WriteIDMappingResponse) ProtoMessage()    {}
func (*WriteIDMappingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dac718ecaafc2333, []int{0}
}

func (m *WriteIDMappingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteIDMappingResponse.Unmarshal(m, b)
}
func (m *WriteIDMappingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteIDMappingResponse.Marshal(b, m, deterministic)
}
func (m *WriteIDMappingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteIDMappingResponse.Merge(m, src)
}
func (m *WriteIDMappingResponse) XXX_Size() int {
	return xxx_messageInfo_WriteIDMappingResponse.Size(m)
}
func (m *WriteIDMappingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteIDMappingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WriteIDMappingResponse proto.InternalMessageInfo

func (m *WriteIDMappingResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *WriteIDMappingResponse) GetErrorCode() uint32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

type WriteIDMappingRequest struct {
	Pid                  int64                            `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Gid                  bool                             `protobuf:"varint,2,opt,name=gid,proto3" json:"gid,omitempty"`
	Mapping              []*WriteIDMappingRequest_Mapping `protobuf:"bytes,3,rep,name=mapping,proto3" json:"mapping,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *WriteIDMappingRequest) Reset()         { *m = WriteIDMappingRequest{} }
func (m *WriteIDMappingRequest) String() string { return proto.CompactTextString(m) }
func (*WriteIDMappingRequest) ProtoMessage()    {}
func (*WriteIDMappingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dac718ecaafc2333, []int{1}
}

func (m *WriteIDMappingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteIDMappingRequest.Unmarshal(m, b)
}
func (m *WriteIDMappingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteIDMappingRequest.Marshal(b, m, deterministic)
}
func (m *WriteIDMappingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteIDMappingRequest.Merge(m, src)
}
func (m *WriteIDMappingRequest) XXX_Size() int {
	return xxx_messageInfo_WriteIDMappingRequest.Size(m)
}
func (m *WriteIDMappingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteIDMappingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WriteIDMappingRequest proto.InternalMessageInfo

func (m *WriteIDMappingRequest) GetPid() int64 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *WriteIDMappingRequest) GetGid() bool {
	if m != nil {
		return m.Gid
	}
	return false
}

func (m *WriteIDMappingRequest) GetMapping() []*WriteIDMappingRequest_Mapping {
	if m != nil {
		return m.Mapping
	}
	return nil
}

type WriteIDMappingRequest_Mapping struct {
	ContainerId          uint32   `protobuf:"varint,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	HostId               uint32   `protobuf:"varint,2,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	Size                 uint32   `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WriteIDMappingRequest_Mapping) Reset()         { *m = WriteIDMappingRequest_Mapping{} }
func (m *WriteIDMappingRequest_Mapping) String() string { return proto.CompactTextString(m) }
func (*WriteIDMappingRequest_Mapping) ProtoMessage()    {}
func (*WriteIDMappingRequest_Mapping) Descriptor() ([]byte, []int) {
	return fileDescriptor_dac718ecaafc2333, []int{1, 0}
}

func (m *WriteIDMappingRequest_Mapping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteIDMappingRequest_Mapping.Unmarshal(m, b)
}
func (m *WriteIDMappingRequest_Mapping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteIDMappingRequest_Mapping.Marshal(b, m, deterministic)
}
func (m *WriteIDMappingRequest_Mapping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteIDMappingRequest_Mapping.Merge(m, src)
}
func (m *WriteIDMappingRequest_Mapping) XXX_Size() int {
	return xxx_messageInfo_WriteIDMappingRequest_Mapping.Size(m)
}
func (m *WriteIDMappingRequest_Mapping) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteIDMappingRequest_Mapping.DiscardUnknown(m)
}

var xxx_messageInfo_WriteIDMappingRequest_Mapping proto.InternalMessageInfo

func (m *WriteIDMappingRequest_Mapping) GetContainerId() uint32 {
	if m != nil {
		return m.ContainerId
	}
	return 0
}

func (m *WriteIDMappingRequest_Mapping) GetHostId() uint32 {
	if m != nil {
		return m.HostId
	}
	return 0
}

func (m *WriteIDMappingRequest_Mapping) GetSize() uint32 {
	if m != nil {
		return m.Size
	}
	return 0
}

type MountShiftfsMarkRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MountShiftfsMarkRequest) Reset()         { *m = MountShiftfsMarkRequest{} }
func (m *MountShiftfsMarkRequest) String() string { return proto.CompactTextString(m) }
func (*MountShiftfsMarkRequest) ProtoMessage()    {}
func (*MountShiftfsMarkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dac718ecaafc2333, []int{2}
}

func (m *MountShiftfsMarkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MountShiftfsMarkRequest.Unmarshal(m, b)
}
func (m *MountShiftfsMarkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MountShiftfsMarkRequest.Marshal(b, m, deterministic)
}
func (m *MountShiftfsMarkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MountShiftfsMarkRequest.Merge(m, src)
}
func (m *MountShiftfsMarkRequest) XXX_Size() int {
	return xxx_messageInfo_MountShiftfsMarkRequest.Size(m)
}
func (m *MountShiftfsMarkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MountShiftfsMarkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MountShiftfsMarkRequest proto.InternalMessageInfo

type MountShiftfsMarkResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MountShiftfsMarkResponse) Reset()         { *m = MountShiftfsMarkResponse{} }
func (m *MountShiftfsMarkResponse) String() string { return proto.CompactTextString(m) }
func (*MountShiftfsMarkResponse) ProtoMessage()    {}
func (*MountShiftfsMarkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dac718ecaafc2333, []int{3}
}

func (m *MountShiftfsMarkResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MountShiftfsMarkResponse.Unmarshal(m, b)
}
func (m *MountShiftfsMarkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MountShiftfsMarkResponse.Marshal(b, m, deterministic)
}
func (m *MountShiftfsMarkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MountShiftfsMarkResponse.Merge(m, src)
}
func (m *MountShiftfsMarkResponse) XXX_Size() int {
	return xxx_messageInfo_MountShiftfsMarkResponse.Size(m)
}
func (m *MountShiftfsMarkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MountShiftfsMarkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MountShiftfsMarkResponse proto.InternalMessageInfo

type MountProcRequest struct {
	Target               string   `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MountProcRequest) Reset()         { *m = MountProcRequest{} }
func (m *MountProcRequest) String() string { return proto.CompactTextString(m) }
func (*MountProcRequest) ProtoMessage()    {}
func (*MountProcRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dac718ecaafc2333, []int{4}
}

func (m *MountProcRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MountProcRequest.Unmarshal(m, b)
}
func (m *MountProcRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MountProcRequest.Marshal(b, m, deterministic)
}
func (m *MountProcRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MountProcRequest.Merge(m, src)
}
func (m *MountProcRequest) XXX_Size() int {
	return xxx_messageInfo_MountProcRequest.Size(m)
}
func (m *MountProcRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MountProcRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MountProcRequest proto.InternalMessageInfo

func (m *MountProcRequest) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

type MountProcResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MountProcResponse) Reset()         { *m = MountProcResponse{} }
func (m *MountProcResponse) String() string { return proto.CompactTextString(m) }
func (*MountProcResponse) ProtoMessage()    {}
func (*MountProcResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dac718ecaafc2333, []int{5}
}

func (m *MountProcResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MountProcResponse.Unmarshal(m, b)
}
func (m *MountProcResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MountProcResponse.Marshal(b, m, deterministic)
}
func (m *MountProcResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MountProcResponse.Merge(m, src)
}
func (m *MountProcResponse) XXX_Size() int {
	return xxx_messageInfo_MountProcResponse.Size(m)
}
func (m *MountProcResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MountProcResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MountProcResponse proto.InternalMessageInfo

type TeardownRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeardownRequest) Reset()         { *m = TeardownRequest{} }
func (m *TeardownRequest) String() string { return proto.CompactTextString(m) }
func (*TeardownRequest) ProtoMessage()    {}
func (*TeardownRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dac718ecaafc2333, []int{6}
}

func (m *TeardownRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeardownRequest.Unmarshal(m, b)
}
func (m *TeardownRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeardownRequest.Marshal(b, m, deterministic)
}
func (m *TeardownRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeardownRequest.Merge(m, src)
}
func (m *TeardownRequest) XXX_Size() int {
	return xxx_messageInfo_TeardownRequest.Size(m)
}
func (m *TeardownRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TeardownRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TeardownRequest proto.InternalMessageInfo

type TeardownResponse struct {
	Success              bool     `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeardownResponse) Reset()         { *m = TeardownResponse{} }
func (m *TeardownResponse) String() string { return proto.CompactTextString(m) }
func (*TeardownResponse) ProtoMessage()    {}
func (*TeardownResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dac718ecaafc2333, []int{7}
}

func (m *TeardownResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeardownResponse.Unmarshal(m, b)
}
func (m *TeardownResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeardownResponse.Marshal(b, m, deterministic)
}
func (m *TeardownResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeardownResponse.Merge(m, src)
}
func (m *TeardownResponse) XXX_Size() int {
	return xxx_messageInfo_TeardownResponse.Size(m)
}
func (m *TeardownResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TeardownResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TeardownResponse proto.InternalMessageInfo

func (m *TeardownResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*WriteIDMappingResponse)(nil), "iws.WriteIDMappingResponse")
	proto.RegisterType((*WriteIDMappingRequest)(nil), "iws.WriteIDMappingRequest")
	proto.RegisterType((*WriteIDMappingRequest_Mapping)(nil), "iws.WriteIDMappingRequest.Mapping")
	proto.RegisterType((*MountShiftfsMarkRequest)(nil), "iws.MountShiftfsMarkRequest")
	proto.RegisterType((*MountShiftfsMarkResponse)(nil), "iws.MountShiftfsMarkResponse")
	proto.RegisterType((*MountProcRequest)(nil), "iws.MountProcRequest")
	proto.RegisterType((*MountProcResponse)(nil), "iws.MountProcResponse")
	proto.RegisterType((*TeardownRequest)(nil), "iws.TeardownRequest")
	proto.RegisterType((*TeardownResponse)(nil), "iws.TeardownResponse")
}

func init() {
	proto.RegisterFile("workspace.proto", fileDescriptor_dac718ecaafc2333)
}

var fileDescriptor_dac718ecaafc2333 = []byte{
	// 442 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x93, 0xcf, 0x6e, 0x13, 0x31,
	0x10, 0xc6, 0x49, 0x17, 0x25, 0xcd, 0x94, 0xd0, 0xd4, 0x90, 0x74, 0x59, 0xa8, 0x14, 0xf6, 0x14,
	0xfe, 0x74, 0x23, 0x95, 0x13, 0x52, 0x4f, 0xc0, 0x25, 0x42, 0x91, 0xe8, 0x16, 0xa9, 0x82, 0x4b,
	0xe4, 0xae, 0xa7, 0x1b, 0xab, 0xca, 0x8e, 0xb1, 0x1d, 0x56, 0xe2, 0x9d, 0x78, 0x1b, 0x1e, 0x08,
	0xc5, 0xb5, 0x93, 0x10, 0x9a, 0xdb, 0xcc, 0x37, 0xfe, 0x3e, 0xcf, 0xfe, 0xac, 0x85, 0xc3, 0x9a,
	0xf4, 0xad, 0x51, 0xbc, 0xc0, 0x4c, 0x69, 0xb2, 0xc4, 0x22, 0x59, 0x9b, 0xf4, 0x02, 0xfa, 0x57,
	0x5a, 0x5a, 0x1c, 0x7f, 0x9a, 0x70, 0xa5, 0x64, 0x55, 0xe6, 0x68, 0x14, 0x55, 0x06, 0x59, 0x0c,
	0xad, 0x39, 0x1a, 0xc3, 0x4b, 0x8c, 0x1b, 0x83, 0xc6, 0xb0, 0x9d, 0x87, 0x96, 0x9d, 0x00, 0xa0,
	0xd6, 0xa4, 0xa7, 0x05, 0x09, 0x8c, 0xf7, 0x06, 0x8d, 0x61, 0x27, 0x6f, 0x3b, 0xe5, 0x23, 0x09,
	0x4c, 0xff, 0x34, 0xa0, 0xb7, 0x9d, 0xf9, 0x63, 0x81, 0xc6, 0xb2, 0x2e, 0x44, 0x4a, 0x0a, 0x17,
	0x17, 0xe5, 0xcb, 0x72, 0xa9, 0x94, 0x52, 0xb8, 0x8c, 0xfd, 0x7c, 0x59, 0xb2, 0x73, 0x68, 0xcd,
	0xef, 0x5c, 0x71, 0x34, 0x88, 0x86, 0x07, 0x67, 0x69, 0x26, 0x6b, 0x93, 0xdd, 0x1b, 0x98, 0x85,
	0x36, 0x58, 0x92, 0x6f, 0xd0, 0xf2, 0x1a, 0x7b, 0x09, 0x8f, 0x0a, 0xaa, 0x2c, 0x97, 0x15, 0xea,
	0xa9, 0xbf, 0xb5, 0x93, 0x1f, 0xac, 0xb4, 0xb1, 0x60, 0xc7, 0xd0, 0x9a, 0x91, 0xb1, 0x53, 0xbf,
	0x41, 0x27, 0x6f, 0x2e, 0xdb, 0xb1, 0x60, 0x0c, 0x1e, 0x1a, 0xf9, 0x0b, 0xe3, 0xc8, 0xa9, 0xae,
	0x4e, 0x9f, 0xc1, 0xf1, 0x84, 0x16, 0x95, 0xbd, 0x9c, 0xc9, 0x1b, 0x7b, 0x63, 0x26, 0x5c, 0xdf,
	0xfa, 0x35, 0xd2, 0x04, 0xe2, 0xff, 0x47, 0x77, 0x18, 0xd3, 0xd7, 0xd0, 0x75, 0xb3, 0x2f, 0x9a,
	0x8a, 0xc0, 0xa1, 0x0f, 0x4d, 0xcb, 0x75, 0x89, 0xd6, 0x93, 0xf5, 0x5d, 0xfa, 0x04, 0x8e, 0x36,
	0xce, 0xfa, 0x80, 0x23, 0x38, 0xfc, 0x8a, 0x5c, 0x0b, 0xaa, 0xab, 0x70, 0xdf, 0x5b, 0xe8, 0xae,
	0xa5, 0xf5, 0x73, 0x99, 0x45, 0x51, 0xa0, 0x31, 0x9e, 0x66, 0x68, 0xcf, 0x7e, 0xef, 0x01, 0x1b,
	0x57, 0x57, 0xe1, 0xf5, 0x2f, 0x51, 0xff, 0x94, 0x05, 0xb2, 0xcf, 0xf0, 0xf8, 0x5f, 0xa8, 0x2c,
	0xd9, 0x4d, 0x3a, 0x79, 0x7e, 0xef, 0xcc, 0xaf, 0xf8, 0x80, 0x5d, 0xf8, 0xaf, 0xdc, 0x20, 0xc0,
	0x5e, 0x38, 0xcb, 0x0e, 0x66, 0xc9, 0xc9, 0x8e, 0xe9, 0x2a, 0xf2, 0x1c, 0xda, 0x2b, 0x18, 0xac,
	0xb7, 0x3e, 0xbd, 0x01, 0x32, 0xe9, 0x6f, 0xcb, 0x2b, 0xf7, 0x7b, 0xd8, 0x0f, 0x88, 0xd8, 0x53,
	0x77, 0x6a, 0x0b, 0x62, 0xd2, 0xdb, 0x52, 0x83, 0xf5, 0xc3, 0x9b, 0xef, 0xaf, 0x4a, 0x69, 0x67,
	0x8b, 0xeb, 0xac, 0xa0, 0xf9, 0xa8, 0x94, 0x56, 0x91, 0x38, 0x95, 0xe4, 0xab, 0x51, 0x6d, 0x4e,
	0x05, 0xc7, 0x39, 0x55, 0x23, 0xae, 0xe4, 0x75, 0xd3, 0xfd, 0x4b, 0xef, 0xfe, 0x06, 0x00, 0x00,
	0xff, 0xff, 0x34, 0xd9, 0x74, 0x90, 0x5e, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// InWorkspaceServiceClient is the client API for InWorkspaceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InWorkspaceServiceClient interface {
	// WriteIDMapping writes a new user/group ID mapping to /proc/<pid>/uid_map (gid_map respectively). This is used
	// for user namespaces and is available four times every 10 seconds.
	WriteIDMapping(ctx context.Context, in *WriteIDMappingRequest, opts ...grpc.CallOption) (*WriteIDMappingResponse, error)
	// MountShiftfsMark mounts the workspace container's rootfs as a shiftfs mark under `/.workspace/mark` if the
	// workspace has the daemon hostPath mount. Can only be used once per workspace.
	MountShiftfsMark(ctx context.Context, in *MountShiftfsMarkRequest, opts ...grpc.CallOption) (*MountShiftfsMarkResponse, error)
	// MountProc mounts a masked proc in the container's rootfs.
	// For now this can be used only once per workspace.
	MountProc(ctx context.Context, in *MountProcRequest, opts ...grpc.CallOption) (*MountProcResponse, error)
	// Teardown prepares workspace content backups and unmounts shiftfs mounts. The canary is supposed to be triggered
	// when the workspace is about to shut down, e.g. using the PreStop hook of a Kubernetes container.
	Teardown(ctx context.Context, in *TeardownRequest, opts ...grpc.CallOption) (*TeardownResponse, error)
}

type inWorkspaceServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewInWorkspaceServiceClient(cc grpc.ClientConnInterface) InWorkspaceServiceClient {
	return &inWorkspaceServiceClient{cc}
}

func (c *inWorkspaceServiceClient) WriteIDMapping(ctx context.Context, in *WriteIDMappingRequest, opts ...grpc.CallOption) (*WriteIDMappingResponse, error) {
	out := new(WriteIDMappingResponse)
	err := c.cc.Invoke(ctx, "/iws.InWorkspaceService/WriteIDMapping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inWorkspaceServiceClient) MountShiftfsMark(ctx context.Context, in *MountShiftfsMarkRequest, opts ...grpc.CallOption) (*MountShiftfsMarkResponse, error) {
	out := new(MountShiftfsMarkResponse)
	err := c.cc.Invoke(ctx, "/iws.InWorkspaceService/MountShiftfsMark", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inWorkspaceServiceClient) MountProc(ctx context.Context, in *MountProcRequest, opts ...grpc.CallOption) (*MountProcResponse, error) {
	out := new(MountProcResponse)
	err := c.cc.Invoke(ctx, "/iws.InWorkspaceService/MountProc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inWorkspaceServiceClient) Teardown(ctx context.Context, in *TeardownRequest, opts ...grpc.CallOption) (*TeardownResponse, error) {
	out := new(TeardownResponse)
	err := c.cc.Invoke(ctx, "/iws.InWorkspaceService/Teardown", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InWorkspaceServiceServer is the server API for InWorkspaceService service.
type InWorkspaceServiceServer interface {
	// WriteIDMapping writes a new user/group ID mapping to /proc/<pid>/uid_map (gid_map respectively). This is used
	// for user namespaces and is available four times every 10 seconds.
	WriteIDMapping(context.Context, *WriteIDMappingRequest) (*WriteIDMappingResponse, error)
	// MountShiftfsMark mounts the workspace container's rootfs as a shiftfs mark under `/.workspace/mark` if the
	// workspace has the daemon hostPath mount. Can only be used once per workspace.
	MountShiftfsMark(context.Context, *MountShiftfsMarkRequest) (*MountShiftfsMarkResponse, error)
	// MountProc mounts a masked proc in the container's rootfs.
	// For now this can be used only once per workspace.
	MountProc(context.Context, *MountProcRequest) (*MountProcResponse, error)
	// Teardown prepares workspace content backups and unmounts shiftfs mounts. The canary is supposed to be triggered
	// when the workspace is about to shut down, e.g. using the PreStop hook of a Kubernetes container.
	Teardown(context.Context, *TeardownRequest) (*TeardownResponse, error)
}

// UnimplementedInWorkspaceServiceServer can be embedded to have forward compatible implementations.
type UnimplementedInWorkspaceServiceServer struct {
}

func (*UnimplementedInWorkspaceServiceServer) WriteIDMapping(ctx context.Context, req *WriteIDMappingRequest) (*WriteIDMappingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WriteIDMapping not implemented")
}
func (*UnimplementedInWorkspaceServiceServer) MountShiftfsMark(ctx context.Context, req *MountShiftfsMarkRequest) (*MountShiftfsMarkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MountShiftfsMark not implemented")
}
func (*UnimplementedInWorkspaceServiceServer) MountProc(ctx context.Context, req *MountProcRequest) (*MountProcResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MountProc not implemented")
}
func (*UnimplementedInWorkspaceServiceServer) Teardown(ctx context.Context, req *TeardownRequest) (*TeardownResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Teardown not implemented")
}

func RegisterInWorkspaceServiceServer(s *grpc.Server, srv InWorkspaceServiceServer) {
	s.RegisterService(&_InWorkspaceService_serviceDesc, srv)
}

func _InWorkspaceService_WriteIDMapping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteIDMappingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InWorkspaceServiceServer).WriteIDMapping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iws.InWorkspaceService/WriteIDMapping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InWorkspaceServiceServer).WriteIDMapping(ctx, req.(*WriteIDMappingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InWorkspaceService_MountShiftfsMark_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MountShiftfsMarkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InWorkspaceServiceServer).MountShiftfsMark(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iws.InWorkspaceService/MountShiftfsMark",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InWorkspaceServiceServer).MountShiftfsMark(ctx, req.(*MountShiftfsMarkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InWorkspaceService_MountProc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MountProcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InWorkspaceServiceServer).MountProc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iws.InWorkspaceService/MountProc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InWorkspaceServiceServer).MountProc(ctx, req.(*MountProcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InWorkspaceService_Teardown_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TeardownRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InWorkspaceServiceServer).Teardown(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iws.InWorkspaceService/Teardown",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InWorkspaceServiceServer).Teardown(ctx, req.(*TeardownRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _InWorkspaceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "iws.InWorkspaceService",
	HandlerType: (*InWorkspaceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "WriteIDMapping",
			Handler:    _InWorkspaceService_WriteIDMapping_Handler,
		},
		{
			MethodName: "MountShiftfsMark",
			Handler:    _InWorkspaceService_MountShiftfsMark_Handler,
		},
		{
			MethodName: "MountProc",
			Handler:    _InWorkspaceService_MountProc_Handler,
		},
		{
			MethodName: "Teardown",
			Handler:    _InWorkspaceService_Teardown_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "workspace.proto",
}
